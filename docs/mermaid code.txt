%%{init: {'themeVariables': {'fontSize': '20px'}}}%%


flowchart TB
    %% 주요 컴포넌트 정의
    
    subgraph frontend ["프론트엔드"]
        React["사용자 UI"]
    end

    subgraph DockerNet ["Docker Network"]
        direction LR
        
        subgraph FastAPIContainer ["FastAPI Container"]
            direction TB

            subgraph AIFunctions ["AI 기능"]
                direction LR
                Python_Vectorize["vectorize"]
                Similarity_Search["similarity_search"]
                RAG_Answer["rag_answer"]
                RAG_Summary["rag_summary"]
            end

            subgraph "로드된 AI 모델"
                direction LR
                SBERT["S-BERT 모델"]
                GeminiAPI["Gemini API"]
            end
        end

    
        subgraph SpringContainer ["Spring Boot Container"]
            direction TB
            Controller["Controller"]
            SpringService["Service"]
            Repository["Repository"]
        end

        subgraph MySQLContainer["MySQL Container"]
            MySQL[(MySQL DB)]
        end

        subgraph QdrantContainer["벡터 DB Container"]
            Qdrant[(Qdrant DB)]
        end
    end

    subgraph "외부 API"
        GuardianAPI["GuardianAPI"]
    end
    

    %% 연결 관계 정의
    React <-->|HTTP/REST| SpringContainer


    %% 외부 API 연결
    GuardianAPI <-->|HTTP/REST| SpringContainer

    SpringContainer <-->|JDBC/MySQL TCP| MySQLContainer

    %% Spring Boot
    Controller <--> SpringService
    SpringService <--> Repository

    %% Spring Boot - FastAPI
    SpringContainer <--> |HTTP/REST| FastAPIContainer

    %% Python 서비스 내부 연결
    Python_Vectorize & Similarity_Search --> SBERT
    RAG_Answer & RAG_Summary --> GeminiAPI

    FastAPIContainer <--> |HTTP/REST| QdrantContainer

    %% 스타일 정의
    classDef user fill:#F8F8F8,stroke:#999,stroke-width:2px,color:#333;
    classDef frontend fill:#61DAFB,stroke:#333,stroke-width:1px,color:black;
    classDef backend fill:#6DB33F,stroke:#333,stroke-width:1px,color:white;
    classDef service fill:#85C1E9,stroke:#333,stroke-width:1px,color:black;
    classDef pythonvenv fill:#E6F7FF,stroke:#306998,stroke-width:2px,stroke-dasharray:5,5,color:#306998;
    classDef pythonfunctions fill:#4B8BBE,stroke:#333,stroke-width:1px,color:white;
    classDef aimodels fill:#FF6B6B,stroke:#333,stroke-width:1px,color:white;
    classDef database fill:#00758F,stroke:#333,stroke-width:1px,color:white;
    classDef external fill:#FFC300,stroke:#333,stroke-width:1px,color:black;
    classDef docker fill:#E6F7FF,stroke:#4169E1,stroke-width:1px;


    %% 스타일 적용
    class React frontend;
    class Controller,SpringService,Repository backend;
    class AutoVectorize,Fetch,Fetchlog,Rag,Search,Vectorize service;
    class PythonVenv pythonvenv;
    class RAG_Answer,RAG_Summary,Similarity_Search,Python_Vectorize pythonfunctions;
    class GeminiAPI,SBERT aimodels;
    class MySQL database;
    class Qdrant database;
    class DockerNet docker;
    class GuardianAPI external;
